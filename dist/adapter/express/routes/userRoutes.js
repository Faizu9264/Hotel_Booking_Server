"use strict";
// src/adapter/express/routes/userRoutes.ts
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const tokenValidationMiddleware_1 = require("../middleware/tokenValidationMiddleware");
const userController_1 = require("../controllers/userController");
const bookingController_1 = require("../controllers/bookingController");
const bookingController_2 = require("../controllers/bookingController");
const couponController_1 = require("../controllers/couponController");
const hotelController_1 = require("../controllers/hotelController");
const app = (0, express_1.default)();
app.use(express_1.default.static("public"));
const router = express_1.default.Router();
router.post("/signup", userController_1.sendOTPController);
router.post("/verify-otp", userController_1.verifyOTPController);
router.post("/complete-signup", userController_1.completeSignupController);
router.post("/login", userController_1.loginController);
router.post("/google-login", userController_1.googleLoginController);
router.post("/resend-otp", userController_1.resendOTPController);
router.post("/forgot-password", userController_1.forgotPasswordController);
router.post("/reset-password", userController_1.resetPasswordController);
router.post("/webhook", bookingController_2.handleWebhookEvent);
router.post("/webhook-addtowallet", userController_1.AddToWalletWebhook);
router.get("/all-reviews", hotelController_1.getAllReviewsController);
router.get("/hotel/all", hotelController_1.getAllHotelsController);
router.use(tokenValidationMiddleware_1.tokenValidationMiddleware);
router.patch("/:userId/update-profile", userController_1.updateProfileController);
router.patch("/:userId/change-password", userController_1.changePasswordController);
router.post("/checkout", userController_1.checkoutController);
router.patch("/cancelBooking/:bookingId", bookingController_1.cancelBookingController);
router.get("/get-all-coupons", couponController_1.getAllCouponsController);
router.post("/add-money", userController_1.AddMoneyController);
router.get("/wallet/:userId", userController_1.getWalletDetailsController);
router.post("/:hotelId/add-review", hotelController_1.addReviewController);
router.post("/refund-booking", userController_1.RefundController);
exports.default = router;
